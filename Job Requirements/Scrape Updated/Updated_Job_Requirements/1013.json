{"Job Title": "SOFTWARE DEVELOPMENT ENGINEER (SDE)", "Company": "TA Netgables Pvt Ltd", "Experience": "4 - 9 years", "Salary": "Not Disclosed", "Location": "Noida", "Job Description": "Education : Graduate or above in computer science /  engineering from a recognized institute\n\nJob Description \n\nDevelop mobile applications using a Model View Controller architecture\n\nComplete feature ownership including user interface,  usability feedback incorporation,  and quality control\n\nThe ideal candidate will be able to commit long term to deep specialized feature areas,  develop in- depth expertize and insight into feature usage.\n\nPreference will be given to candidates with good oral and written communication skills and job responsibilities require work closely with design and marketing staff\n\nCandidate Requirements \n\nExposure to UNIX/ LINUX.\n\nExposure to NodeJS,  RDBMS (Postgresql Preferred)\n\nExposure to HTML,  CSS,  Javascript,  Ajax,  Angular JS\n\nClear understanding of Data Structures,  Algorithms and Object Oriented System Design.\n\nInterview Challenge \n\nAn overview of table based compression \n\nTable based compression works by scanning a stream of text and building a table of tokens found therein. The file itself is then converted to a stream of references substituted for occurences of those tokens. The resulting stream is often much smaller than the original text due to repeating tokens such as \"the\",  \"an\",  etc.\n\nFor example,  given a stream of text:\n\nA long time ago in a galaxy far far away,  It is a period of civil war. Rebel spaceships,  striking from a hidden base,  have won their first victory against the evil Galactic Empire.\n\nThe word table would look like this: \n\nA; 1\n\nlong: 2 \n\ntime: 3\n\nago: 4\n\nin: 5\n\na: 6\n\ngalaxy: 7\n\nfar: 8\n\naway: 9\n\n,  : 10\n\nIt: 11\n\nis: 12\n\nperiod: 13\n\nof: 14\n\ncivil: 15\n\nwar: 16\n\n. : 17\n\nRebel: 18\n\nSpaceships: 19\n\nstriking: 20\n\netc. etc. \n\nThe compressed text would look like:\n\n1, 2, 3, 4, 5, 6, 7, 8, 8, 9, 10, 11, 12, 6, 13, 14, 15, 16, 17, 18, 19, 20\n\nNote the repetition of 8 (far) and 6 (comma , )\n\nQuestion \n\nprogram which can take an arbitrary piece of text and produce a token- table as well as a compressed version of the text given.\n\nSpecifically,  fill out the code in the functions below :\n\nfunction createTokenTable(input) { \n\nvar table = {}; \n\n/  your code here /  \n\nreturn table; \n\n} \n\nfunction compress (input) { \n\nvar table = createTokenTable(input); \n\nvar result = ''; \n\n/  your code here /  \n\nreturn result \n\n} \n\nThink about optimizations possible and implement them (hint: 1 digit numbers deliver the best compression ...)\n\nSubmission Guidelines \n\nTo submit your work send your running code in text file and mail to careers@saralweb.com with subject \"SDE Assignment -  May 2018\"\n\nSubmission Deadline \n\nCandidates will be considered in the order of assignment submission. Please submit your assignment as soon as possible\n\n", "Role": "Software Developer,", "Industry Type": "BPO, Call Centre, ITeS,", "Functional Area": "IT Software - eCommerce, Internet Technologies,", "Employment Type": "Full Time, Permanent", "Role Category": "Programming & Design", "UG": "B.Tech/B.E. in Computers", "PG": "M.Tech in Computers", "Doctorate": "None", "Key Skills": ["Unix", "Computer science", "Usage", "Architecture", "Linux", "RDBMS", "Postgresql", "Data structures", "HTML", "Ajax"]}